name: Continuous Integration
on: push

jobs:
  unit-test:
    name: Unit Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos]
        node: [10, 12]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5 # ジョブのタイムアウト時間
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
        timeout-minutes: 5 # ステップのタイムアウト時間　デフォルトではタイムアウトは存在しない
      - name: Set Node.js ${{ matrix.node }}
        uses: actions/setup-node@v1.3.0
        with:
          node-version: ${{ matrix.node }}


      - name: Get NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache NPM
        uses: actions/cache@v1.1.0
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm test
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Set Node.js 12.x
        uses: actions/setup-node@v1.3.0
        with:
          node-version: 12.x

      - name: Get NPM cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache NPM
        uses: actions/cache@v1.1.0
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  echo:
    name: echo
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: echo github env
        run: echo ${CI}
      - name: echo github env
        run: echo ${GITHUB_WORKFLOW}
      - name: echo github env
        run: echo ${GITHUB_ACTOR}
      - name: echo github env
        run: echo ${GITHUB_REPOSITORY}
      - name: echo github env
        run: echo ${GITHUB_EVENT_NAME}
      - name: echo github env
        run: echo ${GITHUB_WORKSPACE}
      - name: echo 秘密情報
        run: echo "${{ secrets.SECRET_TOKEN }}"
      - name: echo github token
        run: echo "${{ secrets.GITHUB_TOKEN }}"
      - name: ls
        run: cd ${GITHUB_WORKSPACE} && pwd && ls -al && cd test
      - name: step替わりどこにいるか
        run: pwd


  deploy:
    needs: [unit-test, lint, echo]
    name: 完了
    runs-on: ubuntu-latest
    steps:
      - name: echo 完了
        run: echo '終わった'